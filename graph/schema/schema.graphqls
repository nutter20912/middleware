# GraphQL schema example
#
# https://gqlgen.com/getting-started/
scalar Int64
scalar Any

type Query {
  user: User!
  posts(cursor: String): Posts
  post(id: String!): Post!
  comments(post_id: String!, cursor: String): Comments

  wallet: Wallet
  walletEvents(page: Int64, limit: Int64): WalletEvents

  depositOrder(id: String!): DepositOrder!

  spotPositions(page: Int64, limit: Int64, symbol: String): SpotPositions
  spotPositionClosed(page: Int64, limit: Int64, symbol: String): SpotPositionCloseds
}

type Subscription {
  wallet(event_cursor: String): WalletStream!
  position(symbol: String): PositionStream!
  trade(symbol: String): TradeStream!
  spotOrderEvent(order_id: String!): SpotOrderEvent!
  notify: Any!
}

type WalletStream {
  info: Wallet
  events: [WalletEvent]
}

type PositionStream {
  open: [SpotPosition]!
}

# TODO 改成 Interface or Union
type TradeStream {
  agg_trade: AggTradeData
  kline: KlineData
  depth: DepthData
}

type Paginator {
  next_cursor: String
}
type PagePaginator {
  current_page: Int!
  last_page: Int!
  per_page: Int!
  total: Int!
}

type Posts {
  data: [Post]!
  paginator: Paginator
}

type Comments {
  data: [Comment]!
  paginator: Paginator
}

type WalletEvents {
  data: [WalletEvent]!
  paginator: PagePaginator
}

type SpotPositions {
  data: [SpotPosition]!
  paginator: PagePaginator
}

type SpotPositionCloseds {
  data: [SpotPositionClosed]!
  paginator: PagePaginator
}