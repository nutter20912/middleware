type Paginator {
  next_cursor: String
}
type PagePaginator {
  current_page: Int!
  last_page: Int!
  per_page: Int!
  total: Int!
}

type Posts {
  data: [Post]!
  paginator: Paginator
}

type Comments {
  data: [Comment]!
  paginator: Paginator
}

type WalletEvents {
  data: [WalletEvent]!
  paginator: PagePaginator
}

type SpotOrders {
  data: [SpotOrder]!
  paginator: PagePaginator
}

type SpotPositions {
  data: [SpotPosition]!
  paginator: PagePaginator
}

type SpotPositionCloseds {
  data: [SpotPositionClosed]!
  paginator: PagePaginator
}

type WalletStream {
  info: Wallet
  events: [WalletEvent]
}

type PositionStream {
  open: [SpotPosition]!
}

# TODO 改成 Interface or Union
type TradeStream {
  agg_trade: AggTradeData
  kline: KlineData
  depth: DepthData
}