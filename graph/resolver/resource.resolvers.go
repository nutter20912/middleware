package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"
	"fmt"
	"middleware/graph/loaders"
	"middleware/graph/model"
)

// User is the resolver for the user field.
func (r *commentResolver) User(ctx context.Context, obj *model.Comment) (*model.User, error) {
	result, err := loaders.GetUser(ctx, obj.UserId)
	if err != nil {
		fmt.Println(err)
	}

	return result, nil
}

// User is the resolver for the user field.
func (r *postResolver) User(ctx context.Context, obj *model.Post) (*model.User, error) {
	result, err := loaders.GetUser(ctx, obj.UserId)
	if err != nil {
		fmt.Println(err)
	}

	return result, nil
}

// Comment returns CommentResolver implementation.
func (r *Resolver) Comment() CommentResolver { return &commentResolver{r} }

// Post returns PostResolver implementation.
func (r *Resolver) Post() PostResolver { return &postResolver{r} }

type commentResolver struct{ *Resolver }
type postResolver struct{ *Resolver }
