package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.37

import (
	"context"
	"encoding/json"
	"fmt"
	"middleware/api/grpc"
	"middleware/graph/loaders"
	"middleware/graph/model"
	boardV1 "middleware/proto/board/v1"
)

// User is the resolver for the user field.
func (r *commentResolver) User(ctx context.Context, obj *model.Comment) (*model.User, error) {
	result, err := loaders.GetUser(ctx, obj.UserId)
	if err != nil {
		fmt.Println(err)
	}

	return result, nil
}

// User is the resolver for the user field.
func (r *postResolver) User(ctx context.Context, obj *model.Post) (*model.User, error) {
	result, err := loaders.GetUser(ctx, obj.UserId)
	if err != nil {
		fmt.Println(err)
	}

	return result, nil
}

// Comments is the resolver for the comments field.
func (r *postResolver) Comments(ctx context.Context, obj *model.Post) ([]*model.Comment, error) {
	rsp, err := grpc.NewCommentServiceClient().GetAll(ctx, &boardV1.CommentServiceGetAllRequest{
		PostId: obj.ID,
	})
	if err != nil {
		return nil, err
	} else {
		fmt.Println(rsp)
	}

	rspString, _ := json.Marshal(rsp.Data)
	var comments []*model.Comment

	if err = json.Unmarshal(rspString, &comments); err != nil {
		return nil, err
	}

	return comments, nil
}

// Comment returns CommentResolver implementation.
func (r *Resolver) Comment() CommentResolver { return &commentResolver{r} }

// Post returns PostResolver implementation.
func (r *Resolver) Post() PostResolver { return &postResolver{r} }

type commentResolver struct{ *Resolver }
type postResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *postResolver) ID(ctx context.Context, obj *model.Post) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}
func (r *postResolver) UserID(ctx context.Context, obj *model.Post) (string, error) {
	panic(fmt.Errorf("not implemented: UserID - user_id"))
}
